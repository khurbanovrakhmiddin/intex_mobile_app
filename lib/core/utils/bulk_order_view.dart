import 'package:easy_localization/easy_localization.dart';import 'package:flutter/material.dart';import 'package:flutter/services.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:intex_mobile_app/core/constants/text.dart';import 'package:intex_mobile_app/core/utils/buttons/button.dart';import 'package:intex_mobile_app/core/utils/sackbar_custom.dart';import 'package:intex_mobile_app/features/screens/main_page/bloc/main_bloc.dart';import 'package:intex_mobile_app/features/screens/main_page/view/main_page.dart';class BulkOrderView extends StatelessWidget {  const BulkOrderView({    Key? key,  }) : super(key: key);  @override  Widget build(BuildContext context) {    return isTablet(context)        ? SizedBox(            height: 520,            width: double.infinity,            child: ColoredBox(              color: Theme.of(context).canvasColor,              child: Padding(                padding: const EdgeInsets.symmetric(                    horizontal: 20, vertical: 40),                child: Row(                  children: [                    Expanded(                      child: Column(                        crossAxisAlignment: CrossAxisAlignment.start,                        children: [                          Text(                            buyBulk.tr().toString(),                            style: Theme.of(context)                                .textTheme                                .headline2                                ?.copyWith(                                    fontSize: 32,                                    fontWeight: FontWeight.w700),                          ),                          const SizedBox(                            height: 16,                          ),                          Text(                            buyBulkAbout.tr().toString(),                            style: Theme.of(context)                                .textTheme                                .headline3                                ?.copyWith(color: Colors.black),                          ),                          const SizedBox(                            height: 24,                          ),                          const SizedBox(                            height: 24,                          ),                          SendNumberNameView(onPressed: ()=>context.read<MainBloc>().repository                              .requestCall(name, phone),),                        ],                      ),                    ),                    Expanded(                      child: Image.asset(                        'assets/images/bulkImage.png',                        height: 380,                        fit: BoxFit.contain,                      ),                    ),                  ],                ),              ),            ))        : SizedBox(            height: 700,            width: double.infinity,            child: ColoredBox(              color: Theme.of(context).canvasColor,              child: Padding(                padding: const EdgeInsets.symmetric(                    horizontal: 20, vertical: 40),                child: Column(                  crossAxisAlignment: CrossAxisAlignment.start,                  children: [                    Text(                      buyBulk.tr().toString(),                      style: Theme.of(context)                          .textTheme                          .headline2                          ?.copyWith(fontSize: 18),                    ),                    const SizedBox(                      height: 16,                    ),                    Text(                      buyBulkAbout.tr().toString(),                      style: Theme.of(context)                          .textTheme                          .headline3                          ?.copyWith(color: Colors.black),                    ),                    const SizedBox(                      height: 24,                    ),                    Image.asset(                      'assets/images/bulkImage.png',                      height: 202,                      fit: BoxFit.contain,                    ),                    const SizedBox(                      height: 24,                    ),                    SendNumberNameView(onPressed: () =>context.read<MainBloc>().repository                        .requestCall(name, phone),),                  ],                ),              ),            ));  }}class SendNumberNameView extends StatefulWidget {  final onPressed;  const SendNumberNameView({    Key? key,    required this.onPressed,  }) : super(key: key);  @override  State<SendNumberNameView> createState() =>      _SendNumberNameViewState();}class _SendNumberNameViewState extends State<SendNumberNameView> {  late TextEditingController _controllerName;  late TextEditingController _controllerPhone;  bool isPressed = false;  @override  void initState() {    super.initState();    _controllerName = TextEditingController();    _controllerPhone = TextEditingController();  }  @override  void dispose() {    _controllerPhone.dispose();    _controllerName.dispose();    super.dispose();  }  @override  void deactivate() {    _controllerName.dispose();    super.deactivate();  }  @override  Widget build(BuildContext context) {    return SizedBox(      height: 298,      width: double.infinity,      child: ClipRRect(        borderRadius: BorderRadius.circular(12),        child: ColoredBox(          color: Theme.of(context).dividerColor,          child: Padding(            padding: const EdgeInsets.all(16),            child: Column(              mainAxisAlignment: MainAxisAlignment.start,              crossAxisAlignment: CrossAxisAlignment.start,              children: [                Text(                  name.tr().toString(),                  style: Theme.of(context).textTheme.headline6,                ),                const SizedBox(                  height: 12,                ),                TextField(                  controller: _controllerName,                  inputFormatters: [                    FilteringTextInputFormatter.allow(                        RegExp(r'[a-z A-Z]')),                  ],                  decoration: InputDecoration(                    hintStyle: Theme.of(context)                        .textTheme                        .headline3                        ?.copyWith(color: Colors.grey),                    hintText: 'typeName'.tr().toString(),                    border: OutlineInputBorder(                        borderRadius: BorderRadius.circular(8),                        borderSide:                            BorderSide(color: Colors.grey.shade300),                        gapPadding: 1),                    focusedBorder: OutlineInputBorder(                        borderSide:                            BorderSide(color: Colors.grey.shade300),                        borderRadius: BorderRadius.circular(8),                        gapPadding: 1),                  ),                ),                const SizedBox(                  height: 12,                ),                Text(                  phoneNumber.tr().toString(),                  style: Theme.of(context).textTheme.headline6,                ),                const SizedBox(                  height: 12,                ),                // IntlPhoneField(),                TextField(                  keyboardType: TextInputType.phone,                  controller: _controllerPhone,                  inputFormatters: [                    FilteringTextInputFormatter.digitsOnly,                  ],                  maxLength: 9,                  decoration: InputDecoration(                    counterStyle: const TextStyle(                      height: double.minPositive,                    ),                    counterText: "",                    hintStyle: Theme.of(context)                        .textTheme                        .headline3                        ?.copyWith(color: Colors.grey),                    hintText: "(90) 123 45 67",                    prefixIcon: SizedBox(                      width: 100,                      child: Row(                        children: [                          const SizedBox(                            width: 14,                          ),                          Image.asset(                            'assets/icons/flagUz.png',                            width: 28,                            height: 20,                          ),                          const SizedBox(                            width: 4,                          ),                          Text(                            '+998',                            style:                                Theme.of(context).textTheme.headline3,                          ),                        ],                      ),                    ),                    border: OutlineInputBorder(                        borderRadius: BorderRadius.circular(8),                        borderSide:                            BorderSide(color: Colors.grey.shade300),                        gapPadding: 1),                    focusedBorder: OutlineInputBorder(                        borderSide:                            BorderSide(color: Colors.grey.shade300),                        borderRadius: BorderRadius.circular(8),                        gapPadding: 1),                  ),                ),                const SizedBox(                  height: 16,                ),                CustomButton(                  title: send,                  onPressed: () async {                    ///TODO: Zakazat zvonok Button                    if (!isPressed) {                      String name = _controllerName.text.trim();                      String phone = _controllerPhone.text.trim();                      if (name.length < 3) {                        return customSnackbar(                            context: context,                            title: "error "                                "name");                      }                      if (phone.length != 9) {                        return customSnackbar(                            context: context,                            title: "error "                                "phone");                      }                      isPressed = true;                      setState(() {});                      try {                        await widget.onPressed(name, phone);                        isPressed = false;                        setState(() {});                        _controllerPhone.clear();                        _controllerName.clear();                        return customSnackbar(                            context: context,                            title: successRequested.tr().toString(),                            color: Colors.green);                      } catch (e) {                        isPressed = false;                        setState(() {});                        return customSnackbar(                          context: context,                          title: e.toString(),                        );                      }                    }                  },                  color: Theme.of(context).bottomAppBarColor,                ),              ],            ),          ),        ),      ),    );  }}
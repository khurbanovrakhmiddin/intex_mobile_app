import 'package:cached_network_image/cached_network_image.dart';import 'package:flutter/material.dart';import 'package:intex_mobile_app/core/constants/text.dart';import 'package:intex_mobile_app/core/constants/theme.dart';import 'package:intex_mobile_app/core/models/Catalog.dart';import 'package:intex_mobile_app/core/service/mapper.dart';import 'package:intex_mobile_app/core/service/network_service.dart';class CustomCard extends StatelessWidget {  const CustomCard({    Key? key,    required this.onPressed,  required this.category  }) : super(key: key);  final onPressed; final Catalog category;  @override  Widget build(BuildContext context) {    var size = MediaQuery.of(context).size;    return Padding(        padding: const EdgeInsets.symmetric(horizontal: 25,            vertical: 10),        child: ClipRRect(            borderRadius: BorderRadius.circular(12),            child: Card(          color: Colors.white,          elevation: 10,          child:      Stack(children: [        Column(children: [          CachedNetworkImage(            fit: BoxFit.cover,            height: 180,            width: double.infinity,            imageUrl: "${NetworkService.SERVER_DEVELOPMENT}/${category.image}",            imageBuilder: (context, imageProvider) =>  Image(image:            imageProvider,fit: BoxFit.cover,),            placeholder: (context, url) => const LinearProgressIndicator(),            errorWidget: (context, url, error) => const Icon(Icons.error),          ),          Text(            category.frameRu,            style: Theme.of(context).textTheme.headline5?.copyWith(                color: Theme.of(context).bottomAppBarColor),          ),          Padding(              padding: const EdgeInsets.only(left: 35, right: 25),              child: Row(                mainAxisAlignment: MainAxisAlignment.spaceBetween,                children: [                  Column(                    crossAxisAlignment: CrossAxisAlignment.start,                    children: [                      Text(                        priceParser(category.oldPrice),                        style: Theme.of(context)                            .textTheme                            .headline1                            ?.copyWith(                            fontSize: 10,                            fontWeight: FontWeight.w400,                            decoration:                            TextDecoration.lineThrough,                            decorationColor: Colors.red,                            color: Colors.grey),                      ),                      Text(                        priceParser(category.newPrice),                        style: Theme.of(context)                            .textTheme                            .headline1                            ?.copyWith(                          fontSize: 12,                          color: Colors.black,                          fontWeight: FontWeight.w400,                        ),                      ),                    ],                  ),                  ElevatedButton(                      onPressed: onPressed,                      style: ButtonStyle(                        backgroundColor: MaterialStateProperty.all(                            Theme.of(context).primaryColor),                        minimumSize: MaterialStateProperty.all(                            const Size(85, 19)),                        fixedSize: MaterialStateProperty.all(                            const Size(81, 19)),                        shape: MaterialStateProperty.all<                            RoundedRectangleBorder>(                            const RoundedRectangleBorder(                              borderRadius: BorderRadius.only(                                  topRight: Radius.circular(12),                                  bottomLeft: Radius.circular(12)),                            )),                      ),                      child: Text(                        cart,                        style: Theme.of(context)                            .textTheme                            .headline5                            ?.copyWith(                            color: Colors.black, fontSize: 10),                      ))                ],              )),        ],),        Align(          alignment: Alignment.bottomLeft,          child: Container(              width: 107,              height: 30,              decoration: BoxDecoration(                  color: saleType(TypeSale.recommended),                  borderRadius: const BorderRadius.only(                      bottomRight: Radius.circular(10),                      topRight: Radius.circular(10),                  ),                  boxShadow: const [                    BoxShadow(                      color: Color.fromRGBO(0, 0, 0, 0.25),                      blurRadius: 6,                      offset: Offset(1, 0),                    )                  ]),              child: Center(                child: Text(                  category.statusUz,                  style: Theme.of(context).textTheme.headline5,                ),              )),        ),      ],),)));    return Container(      margin: EdgeInsets.only(          right: size.width * .14487,          left: size.width * .14487,          bottom: 10,          top: 24),      decoration: const BoxDecoration(        color: Colors.white,        borderRadius: BorderRadius.only(          topRight: Radius.circular(35),          bottomLeft: Radius.circular(35),          bottomRight: Radius.circular(35),        ),        boxShadow: [          BoxShadow(            color: Color.fromRGBO(0, 0, 0, 0.25),            offset: Offset(0, 5),            blurRadius: 10,          )        ],      ),      height: 217,      width: double.infinity,      child: Column(        children: [          Align(            alignment: Alignment.bottomLeft,            child: Container(              width: 107,                height: 21,                decoration: BoxDecoration(                    color: saleType(TypeSale.recommended),                    borderRadius: const BorderRadius.only(                        bottomRight: Radius.circular(10)),                    boxShadow: const [                      BoxShadow(                        color: Color.fromRGBO(0, 0, 0, 0.25),                        blurRadius: 6,                        offset: Offset(1, 0),                      )                    ]),                child: Center(                  child: Text(                    category.statusUz,                    style: Theme.of(context).textTheme.headline5,                  ),                )),          ),          Text(            category.frameRu,            style: Theme.of(context).textTheme.headline5?.copyWith(                color: Theme.of(context).bottomAppBarColor),          ),          const SizedBox(            height: 5,          ),          CachedNetworkImage(            fit: BoxFit.cover,            height: 122,            width: 199,            imageUrl: "${NetworkService.SERVER_DEVELOPMENT}/${category.image}",            imageBuilder: (context, imageProvider) =>  Image(image:            imageProvider,),            placeholder: (context, url) => const LinearProgressIndicator(),            errorWidget: (context, url, error) => const Icon(Icons.error),          ),          Padding(              padding: const EdgeInsets.only(left: 35, right: 25),              child: Row(                mainAxisAlignment: MainAxisAlignment.spaceBetween,                children: [                  Column(                    crossAxisAlignment: CrossAxisAlignment.start,                    children: [                      Text(                      priceParser(category.oldPrice),                        style: Theme.of(context)                            .textTheme                            .headline1                            ?.copyWith(                                fontSize: 10,                                fontWeight: FontWeight.w400,                                decoration:                                    TextDecoration.lineThrough,                                decorationColor: Colors.red,                                color: Colors.grey),                      ),                      Text(                          priceParser(category.newPrice),                        style: Theme.of(context)                            .textTheme                            .headline1                            ?.copyWith(                              fontSize: 12,                              color: Colors.black,                              fontWeight: FontWeight.w400,                            ),                      ),                    ],                  ),                  ElevatedButton(                      onPressed: onPressed,                      style: ButtonStyle(                        backgroundColor: MaterialStateProperty.all(                            Theme.of(context).primaryColor),                        minimumSize: MaterialStateProperty.all(                            const Size(85, 19)),                        fixedSize: MaterialStateProperty.all(                            const Size(81, 19)),                        shape: MaterialStateProperty.all<                                RoundedRectangleBorder>(                            const RoundedRectangleBorder(                          borderRadius: BorderRadius.only(                              topRight: Radius.circular(12),                              bottomLeft: Radius.circular(12)),                        )),                      ),                      child: Text(                        cart,                        style: Theme.of(context)                            .textTheme                            .headline5                            ?.copyWith(                                color: Colors.black, fontSize: 10),                      ))                ],              )),        ],      ),    );  }}
import 'package:cached_network_image/cached_network_image.dart';import 'package:easy_localization/easy_localization.dart';import 'package:flutter/material.dart';import 'package:intex_mobile_app/core/constants/text.dart';import 'package:intex_mobile_app/core/constants/theme.dart';import 'package:intex_mobile_app/core/service/mapper.dart';import 'package:intex_mobile_app/core/utils/buttons/button.dart';import 'package:intex_mobile_app/core/utils/loading_image_seleton.dart';class CustomCard extends StatelessWidget {  const CustomCard({    Key? key,    required this.onPressed,    // required this.category  }) : super(key: key);  final onPressed;// final Catalog category;  @override  Widget build(BuildContext context) {    var size = MediaQuery.of(context).size;    var orient = MediaQuery.of(context).orientation.name;    String localLang = context.locale.languageCode;    return Padding(      padding:      const EdgeInsets.symmetric(horizontal: 16, vertical: 34),      child: Container(        decoration: BoxDecoration(          boxShadow: const [            BoxShadow(              color: Color.fromRGBO(60, 60, 60, 0.1),              blurRadius: 16,              spreadRadius: 1,              offset: Offset(2,12),)          ],          color: Theme.of(context).dividerColor,          borderRadius:  BorderRadius.circular(10),        ),          child: SizedBox(              height: 347,              width: 220,              child: Stack(                children: [                  Padding(                    padding: const EdgeInsets.symmetric(                        horizontal: 12, vertical: 12),                    child: Column(                      mainAxisAlignment: MainAxisAlignment.spaceBetween,                      children: [                        CachedNetworkImage(                          fit: BoxFit.contain,                          height: 150,                          width: 220,                          imageUrl:                              "https://img.gumtree.co.za/api/v1/za-ads/images/64/6442f53b-2528-4f1c-a4e3-900d87dda01f?rule=s-I3.auto",                          imageBuilder:                              (context, imageProvider) => Image(                            image: imageProvider,                            fit: BoxFit.contain,                          ),                          placeholder: (context, url) =>                              const PlaceHolder(),                          errorWidget: (context, url, error) =>                              const Icon(Icons.error),                        ),                        ///TODO: Lang Check                        Text(                          // localLang == Lang.ru.name?category                          //     .frame_ru:localLang == Lang.uz                          //     .name?category.frame_uz:category.frame_en,                          "Каркасный прямоугольный бассейн",                          style: Theme.of(context)                              .textTheme                              .headline2                              ?.copyWith(                                  color: Theme.of(context)                                      .bottomAppBarColor),                        ),                        Row(                          mainAxisAlignment:                              MainAxisAlignment.spaceBetween,                          children: [                            Column(                              crossAxisAlignment:                                  CrossAxisAlignment.start,                              children: [                                Text(                                  '220х150х60см, 1662л',                                  style: Theme.of(context)                                      .textTheme                                      .headline2                                      ?.copyWith(                                        fontSize: 12,                                      ),                                ),                                const SizedBox(                                  height: 6,                                ),                                Text(                                  priceParser(                                      1250000, localLang),                                  style: Theme.of(context)                                      .textTheme                                      .headline2                                      ?.copyWith(                                          fontSize: 12,                                          decoration:                                              TextDecoration                                                  .lineThrough,                                          decorationColor:                                              Colors.red,                                          color: Colors.grey),                                ),                                const SizedBox(                                  height: 6,                                ),                                Text(                                  priceParser(                                      1200000, localLang),                                  style: Theme.of(context)                                      .textTheme                                      .headline3                                      ?.copyWith(                                        fontSize: 15,                                        color: Theme.of(context)                                            .primaryColor,                                        fontWeight:                                            FontWeight.w700,                                      ),                                ),                              ],                            ),                          ],                        ),                        const Spacer(),                        CustomButton(                          title: cart,                          onPressed: () {},                          color: Theme.of(context)                              .bottomAppBarColor,                        ),                      ],                    ),                  ),                  Visibility(                    visible: true,                    child: Padding(                      padding: const EdgeInsets.only(top: 16),                      child: Align(                        alignment: Alignment.topLeft,                        child: Container(                            width: 107,                            height: 30,                            decoration: BoxDecoration(                                color:                                saleType(TypeSale.discount),                                borderRadius:                                const BorderRadius.only(                                  bottomRight: Radius.circular(10),                                  topRight: Radius.circular(10),                                ),                                boxShadow: const [                                  BoxShadow(                                    color: Color.fromRGBO(                                        0, 0, 0, 0.25),                                    blurRadius: 6,                                    offset: Offset(1, 0),                                  )                                ]),                            child: Center(                              child: Text(                                xitProdaj,                                style: Theme.of(context)                                    .textTheme                                    .headline5,                              ),                            )),                      ),                    ),                  ),                  Visibility(                      visible: false,                      child: Align(                    alignment: Alignment.topLeft,                    child: Container(                        width: 107,                        height: 30,                        decoration: BoxDecoration(                            color:                                saleType(TypeSale.discount),                            borderRadius:                                const BorderRadius.only(                              bottomRight: Radius.circular(10),                              topRight: Radius.circular(10),                            ),                            boxShadow: const [                              BoxShadow(                                color: Color.fromRGBO(                                    0, 0, 0, 0.25),                                blurRadius: 6,                                offset: Offset(1, 0),                              )                            ]),                        child: Center(                          child: Text(                            'localLang == Lang.ru?category.',                            style: Theme.of(context)                                .textTheme                                .headline5,                          ),                        )),                  )),                ],              ))),    );  }}
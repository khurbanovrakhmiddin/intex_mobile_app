import 'package:easy_localization/easy_localization.dart';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:intex_mobile_app/core/models/Catalog_model.dart';import 'package:intex_mobile_app/core/models/Order.dart';import 'package:intex_mobile_app/core/service/mapper.dart';import 'package:intex_mobile_app/core/utils/cart_tile.dart';import 'package:intex_mobile_app/features/screens/cart_page/cart_bloc/cart_bloc.dart';import '../../constants/text.dart';import '../buttons/button.dart';///TODO:SUCCESS CompletedFuture cartDialog({Key? key,required final context,required Catalogcatalog}) {  return showDialog(      context: context,      builder: (BuildContext context) {        String localLang = context.locale.languageCode;        return isTablet(context)? _TabletCartPage(catalog:catalog):  _PhoneCartPage(catalog:catalog);      });}class _TabletCartPage extends StatelessWidget {  final Catalog catalog;  const _TabletCartPage({    Key? key,    required this.catalog,  }) : super(key: key);  @override  Widget build(BuildContext context) {    context.read<CartBloc>().add(CartInitEvent(Order(catalog: catalog)));    return Padding(      padding: EdgeInsets.symmetric(        vertical: MediaQuery.of(context)            .viewPadding            .top,      ),      child: Dialog(        backgroundColor: Colors.transparent,        insetPadding:        const EdgeInsets.all(10),        child: Container(            margin:  const EdgeInsets.symmetric(vertical:60),            width: double.infinity,            height: double.infinity,            decoration: BoxDecoration(                borderRadius:                BorderRadius.circular(15),                color: Theme.of(context)                    .dividerColor),            padding:            const EdgeInsets.symmetric(                horizontal: 15,                vertical: 16),            child: Stack(              children: [                SingleChildScrollView(                    child: Column(                      mainAxisSize: MainAxisSize.min,                      crossAxisAlignment: CrossAxisAlignment.start,                      children: [                        Center(                          child: Text(yourCart.tr(),style: Theme.of                            (context).textTheme                              .headline2?.copyWith(fontSize: 25),),                        ),                        const Divider(color: Colors.grey,),                        const SizedBox(height: 10,),                        CartTile(catalog: catalog,),                        const Divider(color: Colors.grey,),                        const SizedBox(height: 10,),                        Row(                          children: [                            Text('Общая сумма:',style:  Theme.of                              (context).textTheme.headline3,),                            const SizedBox(width: 16,),                          BlocBuilder(builder: (context,state){                           if(state is CartUpdateState){                             return   Text(priceParser                               (state.order.catalog                                 .discountPrice * state.order                                 .count,                                 context.locale                                 .languageCode),                               style:                               Theme.of(context).textTheme.headline3?.copyWith                                 (fontWeight: FontWeight.w700),);                           }                           return   Text(priceParser(catalog.discountPrice, context.locale                               .languageCode),                             style:                             Theme.of(context).textTheme.headline3?.copyWith                               (fontWeight: FontWeight.w700),);                          })                          ],),                        const SizedBox(height: 10,),                        const Divider(color: Colors.grey,),                        const SizedBox(height: 24,),                        Text(                          name.tr().toString(),                          style: Theme.of(context)                              .textTheme                              .headline6,                        ),                        const SizedBox(                          height: 12,                        ),                        TextField(                          decoration: InputDecoration(                            hintText: name.tr(),                            hintStyle: const TextStyle(                                color: Colors.grey                            ),                            border: OutlineInputBorder(                                borderRadius:                                BorderRadius.circular(                                    8),                                borderSide: BorderSide(                                    color: Colors                                        .grey.shade300),                                gapPadding: 1),                            focusedBorder:                            OutlineInputBorder(                                borderSide: BorderSide(                                    color: Colors                                        .grey.shade300),                                borderRadius:                                BorderRadius                                    .circular(8),                                gapPadding: 1),                          ),                        ),                        const SizedBox(                          height: 12,                        ),                        Text(                          phoneNumber.tr(),                          style: Theme.of(context)                              .textTheme                              .headline6,                        ),                        const SizedBox(                          height: 12,                        ),                        TextField(                          onChanged: (txt) {                            ///TODO number ADd                          },                          decoration: InputDecoration(                            hintStyle: Theme.of(context).textTheme                                .headline3?.copyWith(color: Colors.grey),                            hintText: "(90) 123 45 67",                            prefixIcon:SizedBox(                              width: 100,                              child: Row(children: [const SizedBox(width: 14,),                                Image.asset('assets/icons/flagUz.png',width: 28,                                  height: 20,),SizedBox(width: 4,),Text                                  ('+998',style:                                Theme.of                                  (context).textTheme.headline3,),                              ],),                            ),                            border: OutlineInputBorder(                                borderRadius:                                BorderRadius.circular(                                    8),                                borderSide: BorderSide(                                    color: Colors                                        .grey.shade300),                                gapPadding: 1),                            focusedBorder:                            OutlineInputBorder(                                borderSide: BorderSide(                                    color: Colors                                        .grey.shade300),                                borderRadius:                                BorderRadius                                    .circular(8),                                gapPadding: 1),                          ),                        ),                        const SizedBox(                          height: 16,                        ),                        Text(                          address.tr(),                          style: Theme.of(context)                              .textTheme                              .headline6,                        ),                        const SizedBox(                          height: 12,                        ),                        TextField(                          decoration: InputDecoration(                            hintText: address.tr(),                            hintStyle: const TextStyle(                                color: Colors.grey                            ),                            suffixIcon: Icon(CupertinoIcons                                .location_solid,color: Theme.of                              (context).primaryColor,size: 28,),                            border: OutlineInputBorder(                                borderRadius:                                BorderRadius.circular(                                    8),                                borderSide: BorderSide(                                    color: Colors                                        .grey.shade300),                                gapPadding: 1),                            focusedBorder:                            OutlineInputBorder(                                borderSide: BorderSide(                                    color: Colors                                        .grey.shade300),                                borderRadius:                                BorderRadius                                    .circular(8),                                gapPadding: 1),                          ),                        ),                        const SizedBox(                          height: 16,                        ),                        CustomButton(                          title: cart,                          onPressed: (){                            /// TODO: Cart BUTTON                          },                          color: Theme.of(context)                              .bottomAppBarColor,                        ),                      ],                    )),                Align(                  alignment:                  Alignment.topRight,                  child: GestureDetector(                    child: ClipRRect(                      borderRadius:                      BorderRadius                          .circular(7),                      child: ColoredBox(                        color: Theme.of(                            context)                            .bottomAppBarColor,                        child: const Icon(                          Icons.close,                          color: Colors.white,                        ),                      ),                    ),                    onTap: () =>                        Navigator.of(context)                            .pop(),                  ),                ),              ],            )),      ),    );  }}class _PhoneCartPage extends StatelessWidget {  final Catalog catalog;  const _PhoneCartPage({    Key? key, required this.catalog,  }) : super(key: key);  @override  Widget build(BuildContext context) {    return Padding(      padding: EdgeInsets.symmetric(        vertical: MediaQuery.of(context)            .viewPadding            .top,      ),      child: Dialog(        backgroundColor: Colors.transparent,        insetPadding:        const EdgeInsets.all(10),        child: Container(          margin:  EdgeInsets.symmetric(vertical:          MediaQuery.of(context).size.width * .2),            width: double.infinity,            height: double.infinity,            decoration: BoxDecoration(                borderRadius:                BorderRadius.circular(15),                color: Theme.of(context)                    .dividerColor),            padding:            const EdgeInsets.symmetric(                horizontal: 15,                vertical: 16),            child: Stack(              children: [                SingleChildScrollView(                    child: Column(                      mainAxisSize: MainAxisSize.min,                      crossAxisAlignment: CrossAxisAlignment.start,                  children: [                    Center(                      child: Text(yourCart.tr(),style: Theme.of                        (context).textTheme                          .headline2?.copyWith(fontSize: 25),),                    ),                    const Divider(color: Colors.grey,),                    const SizedBox(height: 10,),                     CartTile(catalog: catalog,),                    const Divider(color: Colors.grey,),                    const SizedBox(height: 10,),                    Row(                      children: [                      Text('Общая сумма:',style:  Theme.of                        (context).textTheme.headline3,),                      const SizedBox(width: 16,),                      Text(priceParser(catalog.discountPrice, context.locale                          .languageCode),                        style:                      Theme.of                        (context).textTheme.headline3?.copyWith                        (fontWeight: FontWeight.w700),),                    ],),                    const SizedBox(height: 10,),                    const Divider(color: Colors.grey,),                    const SizedBox(height: 24,),                    Text(                      name.tr().toString(),                      style: Theme.of(context)                          .textTheme                          .headline6,                    ),                    const SizedBox(                      height: 12,                    ),                    TextField(                      decoration: InputDecoration(                        hintText: name.tr(),                        hintStyle: const TextStyle(                            color: Colors.grey                        ),                        border: OutlineInputBorder(                            borderRadius:                            BorderRadius.circular(                                8),                            borderSide: BorderSide(                                color: Colors                                    .grey.shade300),                            gapPadding: 1),                        focusedBorder:                        OutlineInputBorder(                            borderSide: BorderSide(                                color: Colors                                    .grey.shade300),                            borderRadius:                            BorderRadius                                .circular(8),                            gapPadding: 1),                      ),                    ),                    const SizedBox(                      height: 12,                    ),                    Text(                      phoneNumber.tr(),                      style: Theme.of(context)                          .textTheme                          .headline6,                    ),                    const SizedBox(                      height: 12,                    ),                    TextField(                      onChanged: (txt) {                        ///TODO number ADd                      },                      decoration: InputDecoration(                        hintStyle: Theme.of(context).textTheme                            .headline3?.copyWith(color: Colors.grey),                        hintText: "(90) 123 45 67",                        prefixIcon:SizedBox(                          width: 100,                          child: Row(children: [const SizedBox(width: 14,),                            Image.asset('assets/icons/flagUz.png',width: 28,                              height: 20,),SizedBox(width: 4,),Text                              ('+998',style:                            Theme.of                              (context).textTheme.headline3,),                          ],),                        ),                        border: OutlineInputBorder(                            borderRadius:                            BorderRadius.circular(                                8),                            borderSide: BorderSide(                                color: Colors                                    .grey.shade300),                            gapPadding: 1),                        focusedBorder:                        OutlineInputBorder(                            borderSide: BorderSide(                                color: Colors                                    .grey.shade300),                            borderRadius:                            BorderRadius                                .circular(8),                            gapPadding: 1),                      ),                    ),                    const SizedBox(                      height: 16,                    ),                    Text(                      address.tr(),                      style: Theme.of(context)                          .textTheme                          .headline6,                    ),                    const SizedBox(                      height: 12,                    ),                    TextField(                      decoration: InputDecoration(                        hintText: address.tr(),                        hintStyle: const TextStyle(                          color: Colors.grey                        ),                        suffixIcon: Icon(CupertinoIcons                            .location_solid,color: Theme.of                          (context).primaryColor,size: 28,),                        border: OutlineInputBorder(                            borderRadius:                            BorderRadius.circular(                                8),                            borderSide: BorderSide(                                color: Colors                                    .grey.shade300),                            gapPadding: 1),                        focusedBorder:                        OutlineInputBorder(                            borderSide: BorderSide(                                color: Colors                                    .grey.shade300),                            borderRadius:                            BorderRadius                                .circular(8),                            gapPadding: 1),                      ),                    ),                    const SizedBox(                      height: 16,                    ),                    CustomButton(                      title: cart,                      onPressed: (){                        /// TODO: Cart BUTTON                      },                      color: Theme.of(context)                          .bottomAppBarColor,                    ),                  ],                )),                Align(                  alignment:                  Alignment.topRight,                  child: GestureDetector(                    child: ClipRRect(                      borderRadius:                      BorderRadius                          .circular(7),                      child: ColoredBox(                        color: Theme.of(                            context)                            .bottomAppBarColor,                        child: const Icon(                          Icons.close,                          color: Colors.white,                        ),                      ),                    ),                    onTap: () =>                        Navigator.of(context)                            .pop(),                  ),                ),              ],            )),      ),    );  }}
import 'package:easy_localization/easy_localization.dart';import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:intex_mobile_app/core/models/Catalog_model.dart';import 'package:intex_mobile_app/core/models/Order.dart';import 'package:intex_mobile_app/core/service/mapper.dart';import 'package:intex_mobile_app/features/screens/cart_page/cart_bloc/cart_bloc.dart';class CartTile extends StatelessWidget {  final Catalog catalog;  const CartTile({Key? key, required this.catalog}) : super(key: key);  @override  Widget build(BuildContext context) {    String localLang = context.locale.languageCode;    return SizedBox(      height: 78,      width: double.infinity,      child: Stack(        children: [          Row(            children: [              const Expanded(child: _Image()),              const SizedBox(                width: 6,              ),              Expanded(                  flex: 4,                  child: Column(                    crossAxisAlignment: CrossAxisAlignment.start,                    mainAxisAlignment: MainAxisAlignment.spaceBetween,                    children: [                      Padding(                        padding: const EdgeInsets.only(right: 40),                        child: Text(                          localLang == 'ru'                              ? catalog.nameRu                              : localLang == 'uz'                                  ? catalog.nameUz                                  : catalog.nameEn,                          style: Theme.of(context)                              .textTheme                              .headline2                              ?.copyWith(                                fontSize: 12,                              ),                          overflow: TextOverflow.ellipsis,                          maxLines: 2,                        ),                      ),                      const SizedBox(                        height: 6,                      ),                      Text(                        '220х150х60см, 1662л',                        style: Theme.of(context)                            .textTheme                            .headline2                            ?.copyWith(                              fontWeight: FontWeight.w500,                              fontSize: 12,                            ),                      ),                      const SizedBox(                        height: 6,                      ),                      Row(                        mainAxisAlignment:                            MainAxisAlignment.spaceBetween,                        children: [                          SizedBox(                              width: 75,                              child: ClipRRect(                                  borderRadius:                                      BorderRadius.circular(5),                                  child: ColoredBox(                                    color: Colors.grey.shade300,                                    child: Row(                                      mainAxisAlignment:                                          MainAxisAlignment                                              .spaceBetween,                                      children: [                                        _CartButton(                                            icon:                                                const Icon(Icons.add),                                            tap: () => context                                                .read<CartBloc>()                                                .add(CartAddEvent())),                                        BlocBuilder<CartBloc,                                                CartState>(                                            builder:                                                (context, state) {                                          if (state is                                          CartUpdateState) {                                            return Text(                                              state.order.count                                                  .toString(),                                              style: Theme.of(context)                                                  .textTheme                                                  .headline3,                                            );                                          }                                          return Text(                                            '1',                                            style: Theme.of(context)                                                .textTheme                                                .headline3,                                          );                                        }),                                        _CartButton(                                            icon: const Icon(                                                Icons.remove),                                            tap: () => context                                                .read<CartBloc>()                                                .add(                                                    CartRemoveEvent())),                                      ],                                    ),                                  ))),                        ],                      ),                    ],                  )),            ],          ),          BlocBuilder<CartBloc, CartState>(builder: (context, state) {           if(state is CartUpdateState){             return Align(               alignment: Alignment.bottomRight,               child: Text(                 priceParser(state.order.catalog                     .discountPrice * state.order                     .count, localLang),                 style:                 Theme.of(context).textTheme.headline3?.copyWith(                   fontSize: 15,                   color: Theme.of(context).primaryColor,                   fontWeight: FontWeight.w700,                 ),               ),             );           }            return Align(              alignment: Alignment.bottomRight,              child: Text(                priceParser(catalog.discountPrice, localLang),                style:                    Theme.of(context).textTheme.headline3?.copyWith(                          fontSize: 15,                          color: Theme.of(context).primaryColor,                          fontWeight: FontWeight.w700,                        ),              ),            );          }),        ],      ),    );  }}class _CartButton extends StatelessWidget {  final Widget icon;  final tap;  const _CartButton({    Key? key,    required this.icon,    required this.tap,  }) : super(key: key);  @override  Widget build(BuildContext context) {    return ColoredBox(      color: Colors.grey.shade200,      child: InkWell(onTap: tap, child: icon),    );  }}///#TODO:B Version// class _CloseButton extends StatelessWidget {//   const _CloseButton({//     Key? key,//   }) : super(key: key);////   @override//   Widget build(BuildContext context) {//     return GestureDetector(//       child: ClipRRect(//         borderRadius://         BorderRadius//             .circular(7),//         child: ColoredBox(//           color: Colors.grey.shade300,//           child:  Icon(//             Icons.close,//             color: Theme.of(context).primaryColor,//           ),//         ),//       ),//       onTap: () =>//           Navigator.of(context)//               .pop(),//     );//   }// }class _Image extends StatelessWidget {  const _Image({    Key? key,  }) : super(key: key);  @override  Widget build(BuildContext context) {    return SizedBox(      width: 76,      height: 76,      child: ClipRRect(        borderRadius: BorderRadius.circular(8),        child: Image.network(          'https://intex.uz/image/cache/webp/'          'catalog/i/cp/lb/b17b7239657db9ea50dd2a112f155fed'          '-700x500.webp',        ),      ),    );  }}
import 'package:dio/dio.dart';import 'package:equatable/equatable.dart';import 'package:intex_mobile_app/core/models/Catalog_model.dart';import 'package:intex_mobile_app/core/models/Order.dart';import 'package:intex_mobile_app/core/service/network_service.dart';abstract class ICartRepository extends Equatable {  Future requestCall(String name, String number) async {}  Future sendOrder({required String name,required String phone, required String address}) async {}}class CartRepository extends ICartRepository {  Bascet bascet = Bascet(      count: 1,      product_id: 0,      order_id: 0,      location: Cordinat(latitude: 0, longitude: 0));  late Catalog catalog;  CartRepository(this.catalog) {    bascet.product_id = catalog.id;  }  void addCount() {    bascet.count++;  }  void removeCount() {    if (bascet.count >= 2) {      bascet.count--;    }  }  @override  Future requestCall(String name, String number) async {    var response = await NetworkService.POST(        NetworkService.APi_POST_REQUEST_CALL,        {"name": name, "phone": "+998$number"});    if (response.statusCode == 200 || response.statusCode == 201) {      return true;    }    return response.statusCode;  }  @override  Future sendOrder({required String name,required String phone, required String address})  async {    Order order = Order(name: name, phone: phone, address: address,      );Map<String,dynamic> create = {  "order": {    "name": name,    "phone":  "+998$phone",    "address": address,    "order_number": "0",    "status_id": 1  },  "bascet": [bascet.toJson()]};    Response response = await NetworkService.POST(        NetworkService.APi_POST_ORDER_CREATE,        create);    if (response.statusCode == 200 || response.statusCode == 201) {      return true;    }    return response.statusCode;  }  @override  List<Object?> get props => [bascet];}
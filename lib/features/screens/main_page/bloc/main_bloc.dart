import 'dart:async';import 'package:bloc/bloc.dart';import 'package:equatable/equatable.dart';import 'package:intex_mobile_app/core/models/Catalog_model.dart';import 'package:intex_mobile_app/core/models/Category.dart';import 'package:intex_mobile_app/core/models/Contacts.dart';import 'package:intex_mobile_app/core/repository/catalog_repository.dart';part 'main_event.dart';part 'main_state.dart';class MainBloc extends Bloc<MainEvent, MainState> { final Repository repository; final Contacts contacts; final List<Category> category;  List<Catalog> data = [];  MainBloc({required this.repository,required this.contacts,required this      .category}) : super(MainInitial()) {    on<MainGetEvent>(_getData);    on<MainGetCategoryEvent>(_getDataByCategory);  }  FutureOr<void> _getData(MainGetEvent event,Emitter<MainState>  emit)async{emit(MainLoadingState());try{  data =    await repository.loadCatalog();  print(data.length);}catch(e){  emit(MainGetDataState(data));  // emit(MainErrorState(e.toString()));}  }  FutureOr<void> _getDataByCategory(MainGetCategoryEvent event,Emitter<MainState>  emit)async{  emit(MainGetDataByCategoriesState(event.categoryID));  }}
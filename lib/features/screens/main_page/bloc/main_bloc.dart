import 'dart:async';import 'package:bloc/bloc.dart';import 'package:equatable/equatable.dart';import 'package:intex_mobile_app/core/models/Catalog_model.dart';import 'package:intex_mobile_app/core/repository/catalog_repository.dart';part 'main_event.dart';part 'main_state.dart';class MainBloc extends Bloc<MainEvent, MainState> { final Repository repository;  List<Catalog> data = [];  MainBloc(this.repository) : super(MainInitial()) {    on<MainGetEvent>(_getData);  }  FutureOr<void> _getData(MainGetEvent event,Emitter<MainState>  emit)async{emit(MainLoadingState());    data =    await repository.loadCatalog();    print(data.length);    emit(MainGetDataState(data));  }}
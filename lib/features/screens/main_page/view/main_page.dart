import 'package:easy_localization/easy_localization.dart';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:flutter_svg/svg.dart';import 'package:intex_mobile_app/core/constants/text.dart';import 'package:intex_mobile_app/core/models/Category.dart';import 'package:intex_mobile_app/core/service/url_launch.dart';import 'package:intex_mobile_app/core/utils/buttons/button.dart';import 'package:intex_mobile_app/core/utils/buttons/link_button.dart';import 'package:flutter_svg/flutter_svg.dart';import 'package:intex_mobile_app/core/service/local_service.dart';import 'package:intex_mobile_app/core/service/mapper.dart';import 'package:intex_mobile_app/core/utils/bulk_order_view.dart';import 'package:intex_mobile_app/core/utils/custom_drawer.dart';import 'package:intex_mobile_app/core/utils/product_category.dart';import 'package:intex_mobile_app/features/screens/main_page/bloc/main_bloc.dart';import 'package:intex_mobile_app/features/screens/main_page/view/splash_page.dart';import '../../conect_page/view/connect_check/view/connect_view.dart';final scaffoldMainKey = GlobalKey<ScaffoldState>();class MainPage extends StatelessWidget {  const MainPage({Key? key}) : super(key: key);  @override  Widget build(BuildContext context) {    return BlocBuilder<MainBloc,MainState>(builder: (context,state){      if(state is LoadingAllDataState){        return  const SplashScreen();      }      if(state is MainErrorState){     //   context.read<MainBloc>().add(MainInitialEvent());        return  Scaffold(body: Center(child: ElevatedButton            .icon(onPressed: ()=>context.read<MainBloc>().add(MainInitialEvent()), icon:        const        Icon(Icons            .refresh), label:        Text(state.message,maxLines: 7,)),        ),);      }      final repos = context.read<MainBloc>().repository;      List<Social> social =repos.appData.social;      Contacts contacts = repos.contacts();      return Scaffold(          key: scaffoldMainKey,          backgroundColor: Theme.of(context).dividerColor,          appBar: AppBar(            backgroundColor: Theme.of(context).bottomAppBarColor,            toolbarHeight: 0,          ),          drawer: const CustomDrawer(),          body:  BlocListener<MainBloc,MainState>(            listener: (context,state){              if(state is MainGetDataByCategoriesState){              }            },            child: GestureDetector(              behavior: HitTestBehavior.opaque,              onPanDown: (_) {                FocusScope.of(context).requestFocus(FocusNode());              },              child: CustomScrollView(                slivers: [              //   const WarningWidgetValueNotifier(),                  SliverToBoxAdapter(                    child: ColoredBox(                      color: Theme.of(context).splashColor,                      child: Padding(                        padding: const EdgeInsets.symmetric(                            horizontal: 20, vertical: 16),                        child: SizedBox(                          width: double.infinity,                          child: Row(                            children: [                              Text(                                companyname,                                style: Theme.of(context)                                    .textTheme                                    .headline1,                              ),                              const Spacer(),                              IconButton(                                  onPressed: () async {                                    print('launc');                                    await URL.launchPhoneCall(                                        contacts.phone);                                    print('launc');                                  },                                  icon: SvgPicture.asset(                                    'assets/icons/call.svg',                                    color: Theme.of(context)                                        .primaryColor,                                  ))                            ],                          ),                        ),                      ),                    ),                  ),                  const SliverToBoxAdapter(                    child: Divider(                      height: 1,                      color: Colors.grey,                    ),                  ),                  SliverAppBar(                    centerTitle: false,                    backgroundColor: Theme.of(context).splashColor,                    pinned: true,                    leading: Padding(                      padding: const EdgeInsets.only(left: 16),                      child: TextButton(                        onPressed: () {                          scaffoldMainKey.currentState?.openDrawer();                          ///TODO: appbar MENU                        },                        child: SvgPicture.asset(                          'assets/icons/menu.svg',                        ),                      ),                    ),                    title: ColoredBox(                      color: Theme.of(context).splashColor,                      child: Padding(                        padding: const EdgeInsets.symmetric(                            horizontal: 14, vertical: 16),                        child: SizedBox(                          height: 42,                          width: double.infinity,                          child: ClipRRect(                            borderRadius: BorderRadius.circular(6),                            child: ColoredBox(                              color: Theme.of(context).dividerColor,                              child: TextField(                                decoration: InputDecoration(                                  prefixIcon: IconButton(                                    icon: const Icon(Icons.search),                                    color: Theme.of(context)                                        .primaryColor,                                    onPressed: () {},                                  ),                                  contentPadding:                                  const EdgeInsets.only(top: 6),                                  border: InputBorder.none,                                ),                              ),                            ),                          ),                        ),                      ),                    ),                  ),                  BlocBuilder<MainBloc, MainState>(                    builder: (context, state) {                      if (state is MainGetDataState) {                        print(state.list.length);                      }                      return SliverToBoxAdapter(                        child: SingleChildScrollView(                            child: Column(                              children: [                                ///# 1 step  request call                                ///adaptive                                const _RequestCall(),                                const SizedBox(                                  height: 69.5,                                ),                                const ProductCategory(                                    type: popularProduct),                                ///# 2 step                                const AboutFor(),                                const SizedBox(                                  height: 45.5,                                ),                                const ProductCategory(                                    type: newProduct),                                const SizedBox(                                  height: 30.5,                                ),                                //adaptive                                const BulkOrderView(),                                const SizedBox(                                  height: 24,                                ),                                _CompanyQuality(),                                const ProductCategory(                                    type: discountProduct),                                ///adaptive                                const _RequestConsult(),                                ///# 3 step                              ],                            )),                      );                    },                  ),                  SliverToBoxAdapter(                    child: CompanyInfo(                      social: social,                      contacts: contacts,                    ),                  ),                ],              ),            ),));    });  }}class _RequestConsult extends StatelessWidget {  const _RequestConsult({    Key? key,  }) : super(key: key);  @override  Widget build(BuildContext context) {    return isTablet(context)        ? SizedBox(            height: 520,            width: double.infinity,            child: ColoredBox(                color: Theme.of(context).canvasColor,                child: Padding(                  padding: const EdgeInsets.symmetric(                      horizontal: 16, vertical: 40),                  child: Row(                    children: [                      Expanded(                        child: Image.asset(                          'assets/images/worker.png',                          fit: BoxFit.contain,                          height: 440,                        ),                      ),                      Expanded(                        child: Column(                          crossAxisAlignment:                              CrossAxisAlignment.start,                          children: [                            const SizedBox(height: 40),                            Text(                              consult.tr().toString(),                              style: Theme.of(context)                                  .textTheme                                  .headline2                                  ?.copyWith(fontSize: 18),                            ),                            const SizedBox(                              height: 16,                            ),                            Text(                              forConsult.tr().toString(),                              style: Theme.of(context)                                  .textTheme                                  .headline3,                              overflow: TextOverflow.ellipsis,                              maxLines: 10,                            ),                            const SizedBox(                              height: 8,                            ),                             SendNumberNameView(onPressed: ()                             =>context.read<MainBloc>().repository                                 .requestCall(name, phone),),                          ],                        ),                      ),                    ],                  ),                )),          )        : SizedBox(            height: 810,            width: double.infinity,            child: ColoredBox(                color: Theme.of(context).canvasColor,                child: Padding(                  padding: const EdgeInsets.symmetric(                      horizontal: 16, vertical: 40),                  child: Column(                    crossAxisAlignment: CrossAxisAlignment.start,                    children: [                      Text(                        consult.tr().toString(),                        style: Theme.of(context)                            .textTheme                            .headline2                            ?.copyWith(fontSize: 18),                      ),                      const SizedBox(                        height: 16,                      ),                      Text(                        forConsult.tr().toString(),                        style: Theme.of(context).textTheme.headline3,                        overflow: TextOverflow.ellipsis,                        maxLines: 10,                      ),                      const SizedBox(                        height: 8,                      ),                      Padding(                          padding: const EdgeInsets.symmetric(                              horizontal: 50),                          child: Image.asset(                            'assets/images/worker.png',                            height: 335,                            fit: BoxFit.cover,                          )),                       SendNumberNameView(onPressed: (String name,                           String number)                      =>context.read<MainBloc>().repository.requestCall(name, number),),                    ],                  ),                )),          );  }}class _RequestCall extends StatelessWidget {  const _RequestCall({    Key? key,  }) : super(key: key);  @override  Widget build(BuildContext context) {    return Container(      height: 484,      width: double.infinity,      padding:          const EdgeInsets.symmetric(horizontal: 16, vertical: 24),      margin:          const EdgeInsets.symmetric(horizontal: 16, vertical: 24),      decoration: BoxDecoration(        borderRadius: BorderRadius.circular(20),        color: Theme.of(context).canvasColor,      ),      child: isTablet(context)          ? Row(              children: [                Expanded(                    child: Column(                  crossAxisAlignment: CrossAxisAlignment.start,                  children: [                    const SizedBox(                      height: 100,                    ),                    Text(                      fromIntex.tr().toString(),                      style: Theme.of(context)                          .textTheme                          .headline2                          ?.copyWith(fontSize: 24),                      overflow: TextOverflow.ellipsis,                      maxLines: 2,                    ),                    const SizedBox(                      height: 16,                    ),                    Text(                      stepFirstAbout.tr().toString(),                      style: Theme.of(context).textTheme.headline3,                      overflow: TextOverflow.ellipsis,                      maxLines: 10,                    ),                    const SizedBox(                      height: 48,                    ),                    ///# request call                    Padding(                        padding: const EdgeInsets.only(right: 200),                        child: CustomButton(                          title: requestCall,                          onPressed: () => requestCall,                          color: Theme.of(context).bottomAppBarColor,                        )),                  ],                )),                Expanded(                    child: Image.asset(                  'assets/images/quality.png',                  fit: BoxFit.fill,                  height: 319,                  width: double.infinity,                )),              ],            )          : Column(              children: [                Text(                  fromIntex.tr().toString(),                  style: Theme.of(context)                      .textTheme                      .headline2                      ?.copyWith(fontSize: 24),                  overflow: TextOverflow.ellipsis,                  maxLines: 2,                ),                const SizedBox(                  height: 16,                ),                Text(                  stepFirstAbout.tr().toString(),                  style: Theme.of(context).textTheme.headline3,                  overflow: TextOverflow.ellipsis,                  maxLines: 10,                ),                const SizedBox(                  height: 24,                ),                Image.asset('assets/images/quality.png',                    height: 160,                    fit: BoxFit.cover,                    width: double.infinity),                const SizedBox(                  height: 43,                ),                ///# request call                CustomButton(                  title: requestCall,                  onPressed: () => requestCall,                  color: Theme.of(context).bottomAppBarColor,                ),              ],            ),    );  }}class CompanyInfo extends StatelessWidget {final Contacts contacts;final List<Social> social;  const CompanyInfo({    Key? key, required this.contacts, required this.social,  }) : super(key: key);  @override  Widget build(BuildContext context) {    String lang = context.locale.languageCode;    return SizedBox(      height: 480,      width: double.infinity,      child: ColoredBox(        color: Theme.of(context).canvasColor,        child: Padding(          padding: const EdgeInsets.symmetric(horizontal: 22),          child: Column(            crossAxisAlignment: CrossAxisAlignment.start,            children: [              const SizedBox(                height: 44,              ),              Text(                companyname.tr().toString(),                style: Theme.of(context).textTheme.headline1,              ),              const SizedBox(                height: 35,              ),              // Text(              //   aboutIntex1.tr(),              //   style: Theme.of(context)              //       .textTheme              //       .headline2              //       ?.copyWith(fontWeight: FontWeight.w400),              // ),              Row(                children: [                  LinkButton(                    onPressed: () =>                        URL.launch(socialGet(social, 'Facebook')),                    title: 'f',                  ),                  const SizedBox(                    width: 27,                  ),                  LinkButton(                    onPressed: () =>                        URL.launch(socialGet(social, 'Linkedin')),                    title: 'in',                  ),                  const SizedBox(                    width: 27,                  ),                  LinkButton(                    onPressed: () =>                        URL.launch(socialGet(social, 'Instagram')),                    title: '',                    icon: SvgPicture.asset(instagramSVG),                  ),                  const SizedBox(                    width: 27,                  ),                  LinkButton(                      onPressed: () => URL.launch(socialGet(                          social,                          'Twitter'                          '')),                      title: '',                      icon: SvgPicture.asset(twitterSVG)),                ],              ),              const SizedBox(                height: 34,              ),              ///#title Address              // const _cutomTextWidget(title: link),              // const SizedBox(              //   height: 16,              // ),              //              // SpanButton(              //     title: productAbout,              //     onPressed: () {              //       ctr.animateTo(0.0,              //           duration: const Duration(milliseconds: 500),              //           curve: Curves.easeIn);              //     }),              // const SizedBox(              //   height: 8,              // ),              // SpanButton(              //     title: whyWe,              //     onPressed: () {              //       ctr.animateTo(2803,              //           duration: const Duration(milliseconds: 500),              //           curve: Curves.easeIn);              //     }),              // const SizedBox(              //   height: 8,              // ),              // SpanButton(              //     title: cont,              //     onPressed: () {              //       ctr.animateTo(ctr.position.maxScrollExtent,              //           duration: const Duration(milliseconds: 500),              //           curve: Curves.easeIn);              //     }),              // const SizedBox(              //   height: 8,              // ),              // SpanButton(title: category, onPressed: () {}),              // const SizedBox(              //   height: 8,              // ),              // SpanButton(              //     title: popular,              //     onPressed: () {              //       ctr.animateTo(551,              //           duration: const Duration(milliseconds: 500),              //           curve: Curves.easeIn);              //     }),              // const SizedBox(              //   height: 8,              // ),              // SpanButton(              //     title: news,              //     onPressed: () {              //       ctr.animateTo(1515,              //           duration: const Duration(milliseconds: 500),              //           curve: Curves.easeIn);              //     }),              // const SizedBox(              //   height: 8,              // ),              // SpanButton(              //     title: discount,              //     onPressed: () {              //       ctr.animateTo(3749,              //           duration: const Duration(milliseconds: 500),              //           curve: Curves.easeIn);              //     }),              // const SizedBox(              //   height: 8,              // ),              // const _cutomTextWidget(title: callCentre),              // const SizedBox(              //   height: 16,              // ),              // SpanButton(title: deliveryAndPayment, onPressed: () {}),              // const SizedBox(              //   height: 8,              // ),              // SpanButton(title: frequentlyAsked, onPressed: () {}),              // const SizedBox(              //   height: 8,              // ),              // SpanButton(title: confidential, onPressed: () {}),              // const SizedBox(              //   height: 16,              // ),              const _CustomTextWidget(title: address),              const SizedBox(                height: 24,              ),              ///#address              Row(                children: [                  Icon(                    Icons.location_on_outlined,                    color: Theme.of(context).primaryColor,                  ),                  const SizedBox(                    width: 8,                  ),                  ///TODO: Lang En Setting                  SizedBox(                    width: MediaQuery.of(context).size.width * .7,                    child: Text(                      lang == Lang.ru.name                          ? contacts.address_ru                          : lang == Lang.en.name                              ? contacts.address_en                              : contacts.address_uz,                      overflow: TextOverflow.ellipsis,                      maxLines: 2,                    ),                  )                ],              ),              const SizedBox(                height: 8,              ),              ///#number              Row(                children: [                  Icon(                    CupertinoIcons.phone,                    color: Theme.of(context).primaryColor,                  ),                  const SizedBox(                    width: 8,                  ),                  Text(                    numberParser("998${contacts.phone}"),                    overflow: TextOverflow.ellipsis,                    maxLines: 4,                  )                ],              ),              const SizedBox(                height: 8,              ),              ///#gmaiadress              Row(                children: [                  Icon(                    Icons.mail_outline,                    color: Theme.of(context).primaryColor,                  ),                  const SizedBox(                    width: 8,                  ),                  Text(                    contacts.email,                    overflow: TextOverflow.ellipsis,                    maxLines: 4,                  )                ],              ),              const SizedBox(                height: 8,              ),              ///#working time              Row(                children: [                  Icon(                    CupertinoIcons.clock,                    color: Theme.of(context).primaryColor,                  ),                  const SizedBox(                    width: 8,                  ),                  InkWell(                    onTap: () {},                    child: Text(                      lang == Lang.ru.name                          ? contacts.work_ru                          : lang == Lang.en.name                              ? contacts.work_en                              : contacts.work_ru,                      overflow: TextOverflow.ellipsis,                      maxLines: 4,                    ),                  ),                ],              ),              const SizedBox(                height: 16,              ),              Divider(                color: Theme.of(context).primaryColor,              ),              const SizedBox(                height: 16,              ),              Text(                endPage.tr().toString(),                style: Theme.of(context).textTheme.headline3,              )            ],          ),        ),      ),    );  }}class _CustomTextWidget extends StatelessWidget {  final String title;  const _CustomTextWidget({    Key? key,    required this.title,  }) : super(key: key);  @override  Widget build(BuildContext context) {    return Text(      title.tr().toString(),      style: Theme.of(context)          .textTheme          .headline2          ?.copyWith(fontSize: 18),    );  }}class _AboutSubTitle extends StatelessWidget {  final String title;  const _AboutSubTitle({    Key? key,    required this.title,  }) : super(key: key);  @override  Widget build(BuildContext context) {    return ClipRRect(      borderRadius: BorderRadius.circular(20),      child: ColoredBox(          color: Theme.of(context).dividerColor,          child: Row(            children: [              SizedBox(                height: 24,                width: 24,                child: ClipRRect(                  borderRadius: BorderRadius.circular(123123),                  child: ColoredBox(                    color: Theme.of(context).primaryColor,                    child: const Icon(                      CupertinoIcons.checkmark_alt,                      color: Colors.white,                      size: 20,                    ),                  ),                ),              ),              const SizedBox(                width: 17,              ),              Text(title.tr().toString()),              const SizedBox(                width: 10,              ),            ],          )),    );  }}class _AboutTitle extends StatelessWidget {  final String title;  final String subtitle;  final String image;  const _AboutTitle({    Key? key,    required this.title,    required this.subtitle,    required this.image,  }) : super(key: key);  @override  Widget build(BuildContext context) {    return Column(      crossAxisAlignment: CrossAxisAlignment.start,      children: [        SizedBox(            height: 220,            width: double.infinity,            child: ClipRRect(                borderRadius: BorderRadius.circular(10),                child: ColoredBox(                  color: const Color(0xfff0f5f9),                  child: Image.asset(                    image,                    fit: BoxFit.contain,                  ),                ))),        const SizedBox(          height: 17,        ),        Text(          title.tr().toString(),          style: Theme.of(context).textTheme.headline2,        ),        const SizedBox(          height: 6,        ),        Text(subtitle.tr().toString(),            style: Theme.of(context).textTheme.headline3),        const SizedBox(          height: 24,        ),      ],    );  }}///#step 1class _CompanyQuality extends StatelessWidget {  @override  Widget build(BuildContext context) {    return Padding(        padding: const EdgeInsets.symmetric(horizontal: 20),        child: Column(          crossAxisAlignment: CrossAxisAlignment.start,          children: [            Text(              aboutclient.tr().toString(),              style: Theme.of(context)                  .textTheme                  .headline2                  ?.copyWith(fontSize: 18),            ),            const SizedBox(              height: 51,            ),            const _AboutTitle(                title: aboutEcperience,                subtitle: aboutEcperience1,                image: 'assets/images/experience.png'),            const _AboutTitle(                title: aboutDelivery,                subtitle: aboutDelivery1,                image: 'assets/images/img_delivery.png'),            const _AboutTitle(                title: aboutQuality,                subtitle: aboutQuality1,                image: 'assets/images/quality.png'),            const SizedBox(              height: 30,            ),          ],        ));  }}///#step 2class AboutFor extends StatelessWidget {  const AboutFor({Key? key}) : super(key: key);  @override  Widget build(BuildContext context) {    return ColoredBox(      color: Theme.of(context).canvasColor,      child: Padding(          padding: const EdgeInsets.symmetric(horizontal: 40),          child: MediaQuery.of(context).size.width > 740              ? Column(                  crossAxisAlignment: CrossAxisAlignment.start,                  children: [                    const SizedBox(                      height: 40,                    ),                    Text(                      fromIntex.tr().toString(),                      style: Theme.of(context)                          .textTheme                          .headline2                          ?.copyWith(fontSize: 18),                    ),                    const SizedBox(                      height: 15,                    ),                    Text(                      aboutIntex2.tr().toString(),                      style: Theme.of(context)                          .textTheme                          .headline3                          ?.copyWith(color: Colors.black),                    ),                    const SizedBox(                      height: 26,                    ),                    Row(                      mainAxisAlignment: MainAxisAlignment.center,                      children: const [                        _AboutSubTitle(title: a),                      ],                    ),                    const SizedBox(                      height: 6,                    ),                    Row(                      mainAxisAlignment:                          MainAxisAlignment.spaceBetween,                      children: const [                        SizedBox.shrink(),                        _AboutSubTitle(title: c),                        SizedBox.shrink(),                        _AboutSubTitle(title: b),                        SizedBox.shrink(),                      ],                    ),                    Row(                      mainAxisAlignment:                          MainAxisAlignment.spaceAround,                      children: [                        const _AboutSubTitle(title: e),                        Image.asset(                          'assets/images/about_img1.png',                          fit: BoxFit.contain,                          height: 100,                        ),                        const _AboutSubTitle(title: d),                      ],                    ),                  ],                )              : Column(                  crossAxisAlignment: CrossAxisAlignment.start,                  children: [                    const SizedBox(                      height: 40,                    ),                    Text(                      fromIntex.tr().toString(),                      style: Theme.of(context)                          .textTheme                          .headline2                          ?.copyWith(fontSize: 18),                    ),                    const SizedBox(                      height: 15,                    ),                    Text(                      aboutIntex2.tr().toString(),                      style: Theme.of(context)                          .textTheme                          .headline3                          ?.copyWith(color: Colors.black),                    ),                    Wrap(                      direction: Axis.vertical,                      children: const [                        _AboutSubTitle(title: a),                        SizedBox(                          height: 7,                        ),                        _AboutSubTitle(title: b),                        SizedBox(                          height: 7,                        ),                        _AboutSubTitle(title: c),                        SizedBox(                          height: 7,                        ),                        _AboutSubTitle(title: d),                        SizedBox(                          height: 7,                        ),                        _AboutSubTitle(title: e),                      ],                    ),                    const SizedBox(                      height: 25,                    ),                    Image.asset(                      'assets/images/about_img1.png',                      width: double.infinity,                      height: 117,                    )                  ],                )),    );  }}/// TODO:not Usingclass _CustomTextAbout extends StatelessWidget {  final String title;  const _CustomTextAbout({Key? key, required this.title})      : super(key: key);  @override  Widget build(BuildContext context) {    return Text(      title,      maxLines: 5,      style: Theme.of(context).textTheme.headline5?.copyWith(          fontSize: 12,          overflow: TextOverflow.ellipsis,          wordSpacing: 2,          letterSpacing: 1),    );  }}///B Variant// Widget build(BuildContext context) {//   return Scaffold(//     key: _scaffoldKey,//     backgroundColor: Theme.of(context).dividerColor,//     appBar: AppBar(//       backgroundColor: Theme.of(context).bottomAppBarColor,//       toolbarHeight: 0,//     ),//     drawer: _CustomDrawer(//       category: const [],//     ),//     body: NestedScrollView(//       headerSliverBuilder: (BuildContext context, bool innerBoxIsScrolled) {//         return  [//           SliverToBoxAdapter(child: ColoredBox(//             color: Theme//                 .of(context)//                 .splashColor,//             child: Padding(//               padding: const EdgeInsets.symmetric(//                   horizontal: 20, vertical: 16),//               child: SizedBox(//                 width: double.infinity,//                 child: Row(//                   children: [//                     Text(//                       companyname,//                       style: Theme//                           .of(context)//                           .textTheme//                           .headline1,//                     ),//                     const Spacer(),//                     IconButton(//                         onPressed: () =>//                             cartDialog(//                               context: context,//                             ),//                         icon: SvgPicture.asset(//                           'assets/icons/call.svg',//                           color: Theme//                               .of(context)//                               .primaryColor,//                         ))//                   ],//                 ),//               ),//             ),//           ),),//           const SliverToBoxAdapter(//             child: Divider(//               height: 1,//               color: Colors.grey,//             ),//           ),//           SliverAppBar(//             centerTitle: false,//             backgroundColor: Theme.of(context).splashColor,//             pinned: true,//             leading: Padding(//               padding: const EdgeInsets.only(left: 16),//               child: TextButton(//                 onPressed: () {//                   _scaffoldKey.currentState?.openDrawer();////                   ///TODO: appbar MENU//                 },//                 child: SvgPicture.asset(//                   'assets/icons/menu.svg',//                 ),//               ),//             ),//             title: ColoredBox(//               color: Theme.of(context).splashColor,//               child: Padding(//                 padding: const EdgeInsets.symmetric(//                     horizontal: 14, vertical: 16),//                 child: SizedBox(//                   height: 42,//                   width: double.infinity,//                   child: ClipRRect(//                     borderRadius: BorderRadius.circular(6),//                     child: ColoredBox(//                       color: Theme.of(context).dividerColor,//                       child: TextField(//                         decoration: InputDecoration(//                           prefixIcon: IconButton(//                             icon: const Icon(Icons.search),//                             color: Theme.of(context).primaryColor,//                             onPressed: () {},//                           ),//                           contentPadding://                           const EdgeInsets.only(top: 6),//                           border: InputBorder.none,//                         ),//                       ),//                     ),//                   ),//                 ),//               ),//             ),//           ),//         ];////       }, body:   PageView(children: [////       SingleChildScrollView(//           controller: _controller,//           child: Column(//             children: [//               ///# 1 step  request call//               const _RequestCall(),//               const SizedBox(//                 height: 69.5,//               ),//               const ProductCategory(type: popularProduct),//               const SizedBox(//                 height: 69.5,//               ),//               ///# 2 step//               const AboutFor(),//               const SizedBox(//                 height: 45.5,//               ),//               const ProductCategory(type: newProduct),//               const SizedBox(//                 height: 30.5,//               ),//               const BulkOrderView(),//               const SizedBox(//                 height: 24,//               ),//               _CompanyQuality(),//               const ProductCategory(type: discountProduct),//               SizedBox(height: 845,//                 width: double.infinity,//                 child: ColoredBox(//                     color: Theme.of(context).canvasColor,//                     child: Padding(////                       padding: const EdgeInsets.symmetric(horizontal: 16,//                           vertical: 40),//                       child: Column(//                         crossAxisAlignment: CrossAxisAlignment.start,//                         children: [////                           Text('Получить консултацию',style: Theme.of//                             (context).textTheme.headline2?.copyWith//                             (fontSize: 18),),////                           const SizedBox(height: 16,),//                           Text(//                             'Чтобы получить консультацию, отправьте нам свой номер телефона и имя, и мы свяжемся с вами в ближайшее время.',//                             style: Theme.of(context).textTheme.headline3,////                             overflow: TextOverflow.ellipsis,//                             maxLines: 10,//                           ),//                           const SizedBox(height: 8,),////                           Padding(//                               padding: const EdgeInsets.symmetric(horizontal://                               50,vertical: 16),//                               child: Image.asset('assets/images/worker.png',//                                 height: 335,fit: BoxFit.contain,)),//////                           const SendNumberNameView(),////////                         ],),//                     )),//               ),//               ///# 3 step//               CompanyInfo(//                 contacts: Contacts.fromJson({//                   "id": 1,//                   "phone": "99956565569",//                   'email': "intex@gmail.com",//                   "address_ru"://                   "Улица Пахлавона Махмуда, Яшнабадский район, город Ташкент",//                   "address_uz"://                   "Toshkent shahri, Yashnobod tumani, Paxlavon Mahmud ko‘chasi",//                   "address_en"://                   "Toshkent shahri, Yashnobod tumani, Paxlavon "//                       "Mahmud ko‘chasi",//                   "work_uz": "Ish kunlari: 09:00 - 22:00.",//                   "work_en": "Ish kunlari: 09:00 - 22:00.",//                   "work_ru": "Будние дни: 09:00 - 22:00",//                   "telegram": "https://t.me/basseinintexuzb",//                   "instagram"://                   "https://www.instagram.com/intex-market_uz/"//                 }),//               ),//             ],//           )),//       const DetailPage(),//     ],),),//   );// }
// import 'dart:async';//// import 'package:bloc/bloc.dart';// import 'package:equatable/equatable.dart';// import 'package:intex_mobile_app/core/models/Catalog_model.dart';// import 'package:intex_mobile_app/core/repository/product_by_status_repository.dart';// import 'package:intex_mobile_app/core/service/query.dart';//// part 'products_event.dart';// part 'products_state.dart';//// class ProductsBloc extends Bloc<ProductsEvent, ProductsState> {//   List<Catalog> first = [];////   int firstPage =-1;//   int secondPage =-1;////   List<Catalog> second = [];//   List<Catalog> third = [];//   int thirdPage =-1;//   final int limit = 4;//   final ProductByStatusRepository repository;//   ProductsBloc({required this.repository}) : super(ProductsInitial//     ()) {//     on<ProductFirstGetByStatusEvent>(_getFirstData);//     on<ProductSecondGetByStatusEvent>(_getSecondData);//     on<ProductThirdGetByStatusEvent>(_getThirdData);//   }////   FutureOr<void> _getFirstData(ProductFirstGetByStatusEvent event,//       Emitter<ProductsState> emit)async{//     emit(ProductFirstLoadingState());//     firstPage++;////     QueryParams params = QueryParams();//     params.append('status_id', event.id);//     params.append('page', firstPage);//     params.append('limit', limit);//    try{//   List<Catalog> list =    await repository.getByStatus(event.id,//       params);//      first.addAll(list);//   emit(ProductFirstLoaded(first));////    }catch(_){////      firstPage--;//      emit(ProductFirstErrorState());////    }////   }//   FutureOr<void> _getSecondData(ProductSecondGetByStatusEvent event,//       Emitter<ProductsState> emit)async{//     emit(ProductSecondLoadingState());////     secondPage++;//     QueryParams params = QueryParams();//     params.append('status_id', event.id);//     params.append('page', firstPage);//     params.append('limit', limit);//     try{//       List<Catalog> list =    await repository.getByStatus(event.id,//           params);//       second.addAll(list);//       emit(ProductSecondLoaded(first));////     }catch(_){////       secondPage--;//       emit(ProductSecondErrorState());////     }//   }////   FutureOr<void> _getThirdData(ProductThirdGetByStatusEvent event,//       Emitter<ProductsState> emit)async{//     emit(ProductThirdLoadingState());////     thirdPage++;//     QueryParams params = QueryParams();//     params.append('status_id', event.id);//     params.append('page', firstPage);//     params.append('limit', limit);//     try{//       List<Catalog> list =    await repository.getByStatus(event.id,//           params);//       third.addAll(list);//       emit(ProductThirdLoaded(first));////     }catch(_){////       thirdPage--;//       emit(ProductThirdErrorState());////     }//   }//// }
import 'package:flutter/material.dart';import 'package:go_router/go_router.dart';import 'package:intex_mobile_app/features/app.dart';import 'package:intex_mobile_app/features/screens/conect_page/view/connect_check/checker/check_state.dart';import 'package:intex_mobile_app/features/screens/detail_page/page/detail_page.dart';import 'package:intex_mobile_app/features/screens/main_page/view/error_page.dart';import 'package:intex_mobile_app/features/screens/main_page/view/main_page.dart';import '../conect_page/view/connect_check/checker/check_servicde.dart';class Rout{ static final router = GoRouter(    redirectLimit: 10,    redirect: (context, state) async {      ConnectionStatus status =      await CheckInternetConnection.connect();      var connect = status.name == ConnectionStatus.online.name;      final connection = state.subloc == '/connect';      if (!connect) return connection ? null : '/connect';      if (connection) return '/';      return null;    },    refreshListenable: ConnectionStatusValueNotifier(),    initialLocation: '/',    routes: [      GoRoute(          path: '/',          name: 'Main',          builder: (context, state) => const MainPage()),      GoRoute(        path: '/connect',        name: 'NoConnect',        builder: (context, state) => const OffLinePage(),      ),      GoRoute(        path: '/detail/:id',        name: 'Detail',        builder: (context, state) {          final id = state.params['id']!;          return DetailPage(id: int.parse(id));        },      ),    ],    errorPageBuilder: (context, state) => MaterialPage(      key: state.pageKey,      child: ErrorPage(        message: state.error.toString(),        onPressed: () => context.goNamed('Main'),      ),    ),  );}